package Seminar3;

public class Sample01 {
    /**
     * TODO: в Notion стараться ставить методы в первую очередь
     * 1. Спроектировать абстрактный класс "Car" у которого должны быть свойства:
     * марка, модель, цвет, тип кузова, число колес, тип топлива, тип коробки передач, объем двигателя;
     * методы: движение, обслуживание, переключение передач, включение фар, включение дворников.
     *
     * 2. Создать конкретный автомобиль путем наследования класса "Car".
     *
     * 3. Расширить абстрактный класс "Car", добавить метод: подметать улицу.
     * Создать конкретный автомобиль путем наследования класса "Car".
     * Провести проверку принципа SRP.
     *
     * 4. Расширить абстрактный класс "Car", добавить метод:
     * включение противотуманных фар, перевозка груза.
     * Провести проверку принципа OCP.
     *
     * 5. Создать конкретный автомобиль путем наследования класса "Car", определить число колес = 3.
     * Провести проверку принципа LSP.
     *
     * 6. Создать конкретный автомобиль путем наследования класса "Car", определить метод "движение" - "полет".
     * Провести проверку принципа LSP.
     *
     * 7. Создать интерфейс "Заправочная станция", создать метод: заправка топливом.
     *
     * 8. Имплеметировать метод интерфейса "Заправочная станция" в конкретный класс "Car"
     *
     * 9. Добавить в интерфейс "Заправочная станция" методы: протирка лобового стекла, протирка фар,
     * протирка зеркала.
     *
     * 10. Имплементировать все методы интерфейса "Заправочная станция" в конкретный класс "Car".
     * Провести проверку принципа ISP. Создать дополнительный/е интерфейс/ы и имплементировать
     * их в конкретный класс "Car". Провести проверку ISP.
     *
     * 11. Создать путем наследования класса "Car" два автомобиля: с бензиновым и дизельным двигателями,
     * имплементировать метод "Заправка топливом" интерфейса "Заправочная станция".
     * Реализовать заправку каждого автомобиля подходящим топливом.
     * Провести проверку принципа DIP.
     */
     //TODO: HOMEWORK: Спроектировать UML-диаграмму классов модуля Sample01

    public static void main(String[] args) {

    }
    public static double calculateMaintenance(Car car) {
        if(car.getWheelCount() == 6) {
            return 6*900;
        }
        else {
            return 4*1000;
        }
    }
}
